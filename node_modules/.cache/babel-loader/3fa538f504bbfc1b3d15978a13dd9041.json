{"ast":null,"code":"var _jsxFileName = \"/Users/luke/WebstormProjects/react-todo/src/TodoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useReducer, createContext, useContext, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  text: '프로젝트 생성하기',\n  done: true\n}, {\n  id: 2,\n  text: '컴포넌트 스타일링하기',\n  done: true\n}, {\n  id: 3,\n  text: '컨텍스트 만들',\n  done: false\n}, {\n  id: 4,\n  text: '기능 구현하기',\n  done: false\n}];\n\nfunction totoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIdContext = /*#__PURE__*/createContext();\nexport function TodoProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispach] = useReducer(totoReducer, initialTodos);\n  const nextId = useRef(5);\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispach,\n      children: [/*#__PURE__*/_jsxDEV(TodoNextIdContext.Provider, {\n        value: nextId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"OVtlLyOApsRAxk9LZZ1B4zImOC4=\");\n\n_c = TodoProvider;\nexport function useTodoState() {\n  _s2();\n\n  return useContext(TodoStateContext);\n}\n\n_s2(useTodoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useTodoDispatch() {\n  _s3();\n\n  return useContext(TodoDispatchContext);\n}\n\n_s3(useTodoDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/luke/WebstormProjects/react-todo/src/TodoContext.js"],"names":["useReducer","createContext","useContext","useRef","initialTodos","id","text","done","totoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","dispach","nextId","useTodoState","useTodoDispatch"],"mappings":";;;;;AAAA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,MAA/C,QAA4D,OAA5D;;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADiB,EAMjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANiB,EAWjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,SAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAXiB,EAgBjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,SAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAhBiB,CAArB;;AAuBA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOJ,KAAK,CAACK,GAAN,CACHD,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAC,GAAGQ,IAAJ;AAAUN,QAAAA,IAAI,EAAE,CAACM,IAAI,CAACN;AAAtB,OAAxB,GAAsDM,IAD3D,CAAP;;AAGJ,SAAK,QAAL;AACI,aAAOJ,KAAK,CAACM,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAxC,CAAP;;AACJ;AACI,YAAM,IAAIW,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVR;AAYH;;AAED,MAAMM,gBAAgB,gBAAGhB,aAAa,EAAtC;AACA,MAAMiB,mBAAmB,gBAAGjB,aAAa,EAAzC;AACA,MAAMkB,iBAAiB,gBAAGlB,aAAa,EAAvC;AAEA,OAAO,SAASmB,YAAT,OAAkC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACrC,QAAM,CAACZ,KAAD,EAAQa,OAAR,IAAmBtB,UAAU,CAACQ,WAAD,EAAcJ,YAAd,CAAnC;AACA,QAAMmB,MAAM,GAAGpB,MAAM,CAAC,CAAD,CAArB;AACA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEM,KAAlC;AAAA,2BACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEa,OAArC;AAAA,8BACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,QAAA,KAAK,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKF,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAXeD,Y;;KAAAA,Y;AAahB,OAAO,SAASI,YAAT,GAAwB;AAAA;;AAC3B,SAAOtB,UAAU,CAACe,gBAAD,CAAjB;AACH;;IAFeO,Y;;AAIhB,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAC9B,SAAOvB,UAAU,CAACgB,mBAAD,CAAjB;AACH;;IAFeO,e","sourcesContent":["import {useReducer, createContext, useContext, useRef} from \"react\";\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: '프로젝트 생성하기',\n        done: true,\n    },\n    {\n        id: 2,\n        text: '컴포넌트 스타일링하기',\n        done: true,\n    },\n    {\n        id: 3,\n        text: '컨텍스트 만들',\n        done: false,\n    },\n    {\n        id: 4,\n        text: '기능 구현하기',\n        done: false,\n    }\n];\n\nfunction totoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(\n                todo => todo.id === action.id ? {...todo, done: !todo.done} : todo\n            );\n        case 'REMOVE':\n            return state.filter(todo => todo.id !== action.id);\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({children}) {\n    const [state, dispach] = useReducer(totoReducer, initialTodos);\n    const nextId = useRef(5);\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispach}>\n                <TodoNextIdContext.Provider value={nextId}></TodoNextIdContext.Provider>\n                {children}\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState() {\n    return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n    return useContext(TodoDispatchContext);\n}"]},"metadata":{},"sourceType":"module"}