{"ast":null,"code":"var _jsxFileName = \"/Users/luke/WebstormProjects/react-todo/src/components/TodoCreate.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CircleButton = styled.div`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n  \n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  \n  font-size: 60px;\n  color: white;\n  border-radius: 40px;\n  \n  border: none;\n  outline: none;\n  \n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n    background: #ff6b6b;\n    &:hover {\n      background: #ff6b6b;\n    }\n    &:active {\n      background: #fa5232;\n    }\n    transform: translate(-50%, 50%) rotate(45deg);\n  `}\n`;\n_c = CircleButton;\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n_c2 = InsertFormPositioner;\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px;\n  padding-bottom: 72px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n_c3 = InsertForm;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n_c4 = Input;\n\nfunction TodoCreate() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => {\n    setOpen(!open);\n  };\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertForm, {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4 \\uC5D4\\uD130\\uB97C \\uB204\\uB974\\uC138\\uC694!\",\n          autoFocus: true,\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n      open: open,\n      onClick: onToggle,\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoCreate, \"8hzxYQT0Xn4ApTkUNSD4/y9gAp8=\", false, function () {\n  return [useTodoDispatch, useTodoNextId];\n});\n\n_c5 = TodoCreate;\nexport default TodoCreate;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CircleButton\");\n$RefreshReg$(_c2, \"InsertFormPositioner\");\n$RefreshReg$(_c3, \"InsertForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TodoCreate\");","map":{"version":3,"sources":["/Users/luke/WebstormProjects/react-todo/src/components/TodoCreate.js"],"names":["useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","div","props","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,QAA6C,gBAA7C;;;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAcP,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI;AACJ,CAxCA;KAAMI,Y;AA0CN,MAAMI,oBAAoB,GAAGT,MAAM,CAACM,GAAI;AACxC;AACA;AACA;AACA;AACA,CALA;MAAMG,oB;AAON,MAAMC,UAAU,GAAGV,MAAM,CAACW,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,U;AASN,MAAME,KAAK,GAAGZ,MAAM,CAACa,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;;AAUN,SAASE,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,QAAQ,GAAGf,eAAe,EAAhC;AACA,QAAMgB,MAAM,GAAGf,aAAa,EAA5B;;AACA,QAAMgB,QAAQ,GAAG,MAAM;AACnBL,IAAAA,OAAO,CAAC,CAACP,IAAF,CAAP;AACH,GAFD;;AAGA,QAAMa,QAAQ,GAAGC,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAA9B;;AACA,QAAMQ,QAAQ,GAAIF,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACG,cAAF;AACAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAET,MAAM,CAACU,OADT;AAEFC,QAAAA,IAAI,EAAEd,KAFJ;AAGFe,QAAAA,IAAI,EAAE;AAHJ;AAFD,KAAD,CAAR;AAQAd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,MAAM,CAACU,OAAP,IAAkB,CAAlB;AACH,GAbD;;AAeA,sBACI;AAAA,eACKrB,IAAI,iBACD,QAAC,oBAAD;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEgB,QAAtB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,WAAW,EAAC,sFADhB;AAEI,UAAA,SAAS,MAFb;AAGI,UAAA,QAAQ,EAAEH,QAHd;AAII,UAAA,KAAK,EAAEL;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAaI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAER,IAApB;AAA0B,MAAA,OAAO,EAAEY,QAAnC;AAAA,6BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAmBH;;GA3CQN,U;UAGYX,e,EACFC,a;;;MAJVU,U;AA6CT,eAAeA,UAAf","sourcesContent":["import {useState} from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {MdAdd} from 'react-icons/md';\nimport {useTodoDispatch, useTodoNextId} from \"../TodoContext\";\n\nconst CircleButton = styled.div`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n  \n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  \n  font-size: 60px;\n  color: white;\n  border-radius: 40px;\n  \n  border: none;\n  outline: none;\n  \n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n    background: #ff6b6b;\n    &:hover {\n      background: #ff6b6b;\n    }\n    &:active {\n      background: #fa5232;\n    }\n    transform: translate(-50%, 50%) rotate(45deg);\n  `}\n`\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px;\n  padding-bottom: 72px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`\n\nfunction TodoCreate() {\n    const [open, setOpen] = useState(false);\n    const [value, setValue] = useState('');\n    const dispatch = useTodoDispatch();\n    const nextId = useTodoNextId();\n    const onToggle = () => {\n        setOpen(!open)\n    }\n    const onChange = e => setValue(e.target.value);\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId.current,\n                text: value,\n                done: false,\n            }\n        })\n        setValue('')\n        setOpen(false)\n        nextId.current += 1;\n    }\n\n    return(\n        <>\n            {open && (\n                <InsertFormPositioner>\n                    <InsertForm onSubmit={onSubmit}>\n                        <Input\n                            placeholder='할 일을 입력 후 엔터를 누르세요!'\n                            autoFocus\n                            onChange={onChange}\n                            value={value}\n                        />\n                    </InsertForm>\n                </InsertFormPositioner>\n            )}\n            <CircleButton open={open} onClick={onToggle}>\n                <MdAdd/>\n            </CircleButton>\n        </>\n    )\n}\n\nexport default TodoCreate;"]},"metadata":{},"sourceType":"module"}